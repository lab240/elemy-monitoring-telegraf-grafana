## скрипты обработки данных для всех датчиков
    
     
[[processors.starlark]]
 # Reads the Starlark script embedded

  source = '''
  
load("logging.star", "log")
def apply(metric):
  

# CC1001  

  if metric.fields.get('elmCcuThSensorCurStatus') == 2 :
    metric.fields.clear()
    return metric
    
  #for k in metric.fields:
  #  log.debug(k)
    
#  for k in metric.fields:
#    log.debug(k)
   #	pass
   # log.debug(metric.fields[str(k)])
  
  if metric.tags.get('name') == "CCU-1001" and "elmCcuDoCurState" in metric.fields and "index" in metric.tags:
    index_str=metric.tags["index"]
    m = metric.fields["elmCcuDoCurState"]
    outstate_str="Output_state"+str(int(index_str)+1)
    metric.fields.clear()
    metric.fields[outstate_str]=m
    return metric
    
  if metric.tags.get('name') == "CCU-1001" and "elmCcuDiCurState" in metric.fields and "index" in metric.tags:
    index_str=metric.tags["index"]
    m = metric.fields["elmCcuDiCurState"]
    outstate_str="Input_state"+str(int(index_str)+1)
    metric.fields.clear()
    metric.fields[outstate_str]=m
    return metric

## ATS1204 & ATS1205
  if metric.tags.get('name') == "ATS1204" or metric.tags.get('name') == "ATS1205":
   if metric.fields.get('elmAtsPowerInputIsActive') == 0 :
     metric.fields.clear()
     return metric
   
  if metric.tags.get('name') == "ATS1204" or metric.tags.get('name') == "ATS1205":
  	if "elmAtsPowerInputVoltage" in metric.fields and "elmAtsPowerInputFreqence" in metric.fields and "index" in metric.tags:
  	  index_str=metric.tags["index"]
  	  m1 = metric.fields["elmAtsPowerInputVoltage"]
  	  m2 = metric.fields["elmAtsPowerInputFreqence"]
 	  outstate_str1="Volt_input"+str(int(index_str)+1)
 	  outstate_str2="Freq_input"+str(int(index_str)+1)
  	  metric.fields.clear()
	  metric.fields[outstate_str1]=m1
  	  metric.fields[outstate_str2]=m2
  	  return metric
    
    
  
  return metric
'''
